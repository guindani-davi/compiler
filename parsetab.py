
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ASSIGN BEGIN COLON COMMA CONST DIFF DIVIDE DOT DOTDOT ELSE END EQUALS ERROR FUNCTION GE GT ID IF INTEGER LBRACKET LE LPAREN LT MINUS NUM_INT NUM_REAL OF PLUS PROGRAM RBRACKET READ REAL RECORD RPAREN SEMICOLON STRING THEN TIMES TYPE VAR WHILE WRITEPROGRAMA : PROGRAM ID SEMICOLON CORPOCORPO : DECLARACOES BEGIN LISTA_COM END\n| BEGIN LISTA_COM ENDDECLARACOES : DEF_CONST DEF_TIPOS DEF_VAR LISTA_FUNC\n| emptyDEF_CONST : CONST LISTA_CONST\n| emptyLISTA_CONST : CONSTANTE SEMICOLON LISTA_CONST\n| CONSTANTE SEMICOLON\n| emptyCONSTANTE : ID ASSIGN CONST_VALOR SEMICOLONCONST_VALOR : STRING\n| EXP_MATDEF_TIPOS : TYPE LISTA_TIPOS\n| emptyLISTA_TIPOS : TIPO SEMICOLON LISTA_TIPOS\n| TIPO SEMICOLON\n| emptyTIPO : ID ASSIGN TIPO_DADOTIPO_DADO : INTEGER\n| REAL\n| ARRAY LBRACKET NUM_INT RBRACKET OF TIPO_DADO\n| RECORD LISTA_VAR END\n| IDDEF_VAR : VAR LISTA_VAR\n| emptyLISTA_VAR : VARIAVEL SEMICOLON LISTA_VAR\n| VARIAVEL SEMICOLON\n| emptyVARIAVEL : LISTA_ID COLON TIPO_DADOLISTA_ID : ID COMMA LISTA_ID\n| ID\n| emptyLISTA_FUNC : FUNCAO LISTA_FUNC\n| emptyFUNCAO : FUNCTION ID LPAREN PARAM_FORM RPAREN COLON TIPO_DADO BLOCO_FUNCAO\n| FUNCTION ID LPAREN RPAREN COLON TIPO_DADO BLOCO_FUNCAOPARAM_FORM : PARAM COMMA PARAM_FORM\n| PARAM\n| emptyPARAM : LISTA_ID COLON TIPO_DADOBLOCO_FUNCAO : DEF_VAR BLOCO\n| BLOCOBLOCO : BEGIN LISTA_COM END\n| COMANDOLISTA_COM : COMANDO SEMICOLON LISTA_COM\n| COMANDO SEMICOLON\n| emptyCOMANDO : NOME ASSIGN VALOR\n| WHILE EXP_LOGICA BLOCO\n| IF EXP_LOGICA THEN BLOCO ELSE_OPT\n| WRITE LPAREN EXP_MAT RPAREN\n| WRITE LPAREN STRING RPAREN\n| READ LPAREN NOME RPAREN\n| BLOCOELSE_OPT : ELSE BLOCO\n| emptyVALOR : EXP_MAT\n| ID LISTA_ARGLISTA_ARG : LPAREN LISTA_EXP RPAREN\n| LPAREN RPARENLISTA_EXP : EXP_MAT COMMA LISTA_EXP\n| EXP_MAT\n| emptyEXP_LOGICA : EXP_RELEXP_REL : EXP_MAT OP_REL EXP_MAT\n| EXP_MATOP_REL : EQUALS\n| DIFF\n| LT\n| LE\n| GT\n| GEEXP_MAT : TERMO PLUS EXP_MAT\n| TERMO MINUS EXP_MAT\n| TERMO\nTERMO : FATOR TIMES TERMO\n| FATOR DIVIDE TERMO\n| FATORFATOR : PARAMETRO\n| LPAREN EXP_MAT RPARENPARAMETRO : NOME\n| NUM_INT\n| NUM_REALNOME : ID NOME_CONT\n| IDNOME_CONT : DOT ID NOME_CONT\n| LBRACKET EXP_MAT RBRACKET\n| emptyempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,32,61,],[0,-1,-3,-2,]),'ID':([2,7,10,11,12,17,19,22,24,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,53,54,59,60,69,70,71,72,73,74,75,76,77,78,79,81,85,90,91,93,96,97,103,104,105,106,107,108,109,114,115,118,119,120,122,124,125,127,134,136,137,144,152,155,156,157,159,160,163,164,166,168,],[3,22,29,22,22,22,22,-86,58,22,66,22,-65,-67,-76,-79,-80,22,-82,-83,-84,22,22,-85,85,22,-89,95,-26,29,22,22,-68,-69,-70,-71,-72,-73,22,22,22,22,22,-90,117,-25,-29,58,122,22,-66,-74,-75,-77,-78,-81,-87,-88,95,122,95,-24,-20,-21,95,22,95,-27,22,-23,122,95,122,122,22,122,22,22,-22,]),'SEMICOLON':([3,14,18,22,27,38,39,40,42,43,44,48,51,56,62,64,65,66,67,68,85,92,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,122,123,124,125,128,130,133,135,138,143,145,152,168,],[4,33,-55,-86,59,-76,-79,-80,-82,-83,-84,-85,-89,96,-44,-49,-58,-86,-50,-45,-90,118,128,-12,-13,-59,-74,-75,-77,-78,-81,-55,-52,-53,-54,-87,-88,-24,-19,-20,-21,-11,-61,-51,-57,-30,-60,-55,-23,-22,]),'BEGIN':([4,6,7,8,9,10,11,12,22,23,24,25,26,28,33,35,36,37,38,39,40,42,43,44,48,51,52,53,54,55,57,59,62,64,65,66,67,68,81,85,87,88,89,91,93,96,98,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,121,122,124,125,130,133,134,135,137,143,145,152,160,164,165,166,167,168,169,170,],[7,11,12,-90,-5,-90,12,12,-86,-90,-90,-15,-6,-10,12,12,-65,-67,-76,-79,-80,-82,-83,-84,-85,-89,-90,-90,-26,-14,-18,-9,-44,-49,-58,-86,-50,-45,12,-90,-4,-90,-35,-25,-29,-17,-8,-59,-66,-74,-75,-77,-78,-81,-55,-52,-53,-54,-87,-88,-34,-28,-16,-24,-20,-21,-61,-51,12,-57,-27,-60,-55,-23,12,12,-37,12,-43,-22,-36,-42,]),'CONST':([4,],[10,]),'TYPE':([4,8,9,10,26,28,59,98,],[-90,24,-7,-90,-6,-10,-9,-8,]),'VAR':([4,8,9,10,23,24,25,26,28,55,57,59,96,98,121,122,124,125,152,160,164,168,],[-90,-90,-7,-90,53,-90,-15,-6,-10,-14,-18,-9,-17,-8,-16,-24,-20,-21,-23,53,53,-22,]),'FUNCTION':([4,8,9,10,22,23,24,25,26,28,38,39,40,42,43,44,48,51,52,53,54,55,57,59,62,64,65,66,67,68,85,88,91,93,96,98,102,105,106,107,108,109,110,111,112,113,114,115,118,121,130,133,135,137,143,145,165,167,169,170,],[-90,-90,-7,-90,-86,-90,-90,-15,-6,-10,-76,-79,-80,-82,-83,-84,-85,-89,90,-90,-26,-14,-18,-9,-44,-49,-58,-86,-50,-45,-90,90,-25,-29,-17,-8,-59,-74,-75,-77,-78,-81,-55,-52,-53,-54,-87,-88,-28,-16,-61,-51,-57,-27,-60,-55,-37,-43,-36,-42,]),'WHILE':([7,11,12,22,33,35,36,37,38,39,40,42,43,44,48,51,53,54,81,85,91,93,104,105,106,107,108,109,114,115,118,122,124,125,134,137,152,160,164,166,168,],[17,17,17,-86,17,17,-65,-67,-76,-79,-80,-82,-83,-84,-85,-89,-90,-26,17,-90,-25,-29,-66,-74,-75,-77,-78,-81,-87,-88,-28,-24,-20,-21,17,-27,-23,17,17,17,-22,]),'IF':([7,11,12,22,33,35,36,37,38,39,40,42,43,44,48,51,53,54,81,85,91,93,104,105,106,107,108,109,114,115,118,122,124,125,134,137,152,160,164,166,168,],[19,19,19,-86,19,19,-65,-67,-76,-79,-80,-82,-83,-84,-85,-89,-90,-26,19,-90,-25,-29,-66,-74,-75,-77,-78,-81,-87,-88,-28,-24,-20,-21,19,-27,-23,19,19,19,-22,]),'WRITE':([7,11,12,22,33,35,36,37,38,39,40,42,43,44,48,51,53,54,81,85,91,93,104,105,106,107,108,109,114,115,118,122,124,125,134,137,152,160,164,166,168,],[20,20,20,-86,20,20,-65,-67,-76,-79,-80,-82,-83,-84,-85,-89,-90,-26,20,-90,-25,-29,-66,-74,-75,-77,-78,-81,-87,-88,-28,-24,-20,-21,20,-27,-23,20,20,20,-22,]),'READ':([7,11,12,22,33,35,36,37,38,39,40,42,43,44,48,51,53,54,81,85,91,93,104,105,106,107,108,109,114,115,118,122,124,125,134,137,152,160,164,166,168,],[21,21,21,-86,21,21,-65,-67,-76,-79,-80,-82,-83,-84,-85,-89,-90,-26,21,-90,-25,-29,-66,-74,-75,-77,-78,-81,-87,-88,-28,-24,-20,-21,21,-27,-23,21,21,21,-22,]),'END':([7,11,12,13,15,30,31,33,63,93,118,127,137,142,],[-90,-90,-90,32,-48,61,62,-47,-46,-29,-28,-90,-27,152,]),'ASSIGN':([16,22,29,48,51,58,85,114,115,],[34,-86,60,-85,-89,97,-90,-87,-88,]),'LPAREN':([17,19,20,21,34,41,46,50,60,66,69,70,71,72,73,74,75,76,77,78,79,103,117,144,],[41,41,46,47,41,41,41,41,41,103,41,-68,-69,-70,-71,-72,-73,41,41,41,41,41,136,41,]),'NUM_INT':([17,19,34,41,46,50,60,69,70,71,72,73,74,75,76,77,78,79,103,141,144,],[43,43,43,43,43,43,43,43,-68,-69,-70,-71,-72,-73,43,43,43,43,43,151,43,]),'NUM_REAL':([17,19,34,41,46,50,60,69,70,71,72,73,74,75,76,77,78,79,103,144,],[44,44,44,44,44,44,44,44,-68,-69,-70,-71,-72,-73,44,44,44,44,44,44,]),'TIMES':([22,39,40,42,43,44,48,51,66,85,109,114,115,],[-86,78,-80,-82,-83,-84,-85,-89,-86,-90,-81,-87,-88,]),'DIVIDE':([22,39,40,42,43,44,48,51,66,85,109,114,115,],[-86,79,-80,-82,-83,-84,-85,-89,-86,-90,-81,-87,-88,]),'PLUS':([22,38,39,40,42,43,44,48,51,66,85,107,108,109,114,115,],[-86,76,-79,-80,-82,-83,-84,-85,-89,-86,-90,-77,-78,-81,-87,-88,]),'MINUS':([22,38,39,40,42,43,44,48,51,66,85,107,108,109,114,115,],[-86,77,-79,-80,-82,-83,-84,-85,-89,-86,-90,-77,-78,-81,-87,-88,]),'EQUALS':([22,37,38,39,40,42,43,44,48,51,85,105,106,107,108,109,114,115,],[-86,70,-76,-79,-80,-82,-83,-84,-85,-89,-90,-74,-75,-77,-78,-81,-87,-88,]),'DIFF':([22,37,38,39,40,42,43,44,48,51,85,105,106,107,108,109,114,115,],[-86,71,-76,-79,-80,-82,-83,-84,-85,-89,-90,-74,-75,-77,-78,-81,-87,-88,]),'LT':([22,37,38,39,40,42,43,44,48,51,85,105,106,107,108,109,114,115,],[-86,72,-76,-79,-80,-82,-83,-84,-85,-89,-90,-74,-75,-77,-78,-81,-87,-88,]),'LE':([22,37,38,39,40,42,43,44,48,51,85,105,106,107,108,109,114,115,],[-86,73,-76,-79,-80,-82,-83,-84,-85,-89,-90,-74,-75,-77,-78,-81,-87,-88,]),'GT':([22,37,38,39,40,42,43,44,48,51,85,105,106,107,108,109,114,115,],[-86,74,-76,-79,-80,-82,-83,-84,-85,-89,-90,-74,-75,-77,-78,-81,-87,-88,]),'GE':([22,37,38,39,40,42,43,44,48,51,85,105,106,107,108,109,114,115,],[-86,75,-76,-79,-80,-82,-83,-84,-85,-89,-90,-74,-75,-77,-78,-81,-87,-88,]),'THEN':([22,36,37,38,39,40,42,43,44,45,48,51,85,104,105,106,107,108,109,114,115,],[-86,-65,-67,-76,-79,-80,-82,-83,-84,81,-85,-89,-90,-66,-74,-75,-77,-78,-81,-87,-88,]),'RPAREN':([22,38,39,40,42,43,44,48,51,80,82,83,84,85,103,105,106,107,108,109,114,115,122,124,125,129,131,132,136,144,146,148,149,152,153,156,161,162,168,],[-86,-76,-79,-80,-82,-83,-84,-85,-89,109,111,112,113,-90,130,-74,-75,-77,-78,-81,-87,-88,-24,-20,-21,143,-63,-64,147,-90,154,-39,-40,-23,-62,-90,-38,-41,-22,]),'RBRACKET':([22,38,39,40,42,43,44,48,51,85,86,105,106,107,108,109,114,115,151,],[-86,-76,-79,-80,-82,-83,-84,-85,-89,-90,115,-74,-75,-77,-78,-81,-87,-88,158,]),'ELSE':([22,38,39,40,42,43,44,48,51,62,64,65,66,67,68,85,102,105,106,107,108,109,110,111,112,113,114,115,130,133,135,143,145,],[-86,-76,-79,-80,-82,-83,-84,-85,-89,-44,-49,-58,-86,-50,-45,-90,-59,-74,-75,-77,-78,-81,134,-52,-53,-54,-87,-88,-61,-51,-57,-60,-55,]),'COMMA':([22,38,39,40,42,43,44,48,51,85,95,105,106,107,108,109,114,115,122,124,125,131,148,152,162,168,],[-86,-76,-79,-80,-82,-83,-84,-85,-89,-90,120,-74,-75,-77,-78,-81,-87,-88,-24,-20,-21,144,156,-23,-41,-22,]),'DOT':([22,66,85,],[49,49,49,]),'LBRACKET':([22,66,85,126,],[50,50,50,141,]),'STRING':([46,60,],[83,100,]),'COLON':([53,93,94,95,118,120,127,136,139,140,147,149,150,154,156,],[-90,-33,119,-32,-90,-90,-90,-90,-31,-33,155,-33,157,159,-90,]),'INTEGER':([97,119,155,157,159,163,],[124,124,124,124,124,124,]),'REAL':([97,119,155,157,159,163,],[125,125,125,125,125,125,]),'ARRAY':([97,119,155,157,159,163,],[126,126,126,126,126,126,]),'RECORD':([97,119,155,157,159,163,],[127,127,127,127,127,127,]),'OF':([158,],[163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'CORPO':([4,],[5,]),'DECLARACOES':([4,],[6,]),'DEF_CONST':([4,],[8,]),'empty':([4,7,8,10,11,12,22,23,24,33,52,53,59,66,85,88,96,103,110,118,120,127,136,144,156,160,164,],[9,15,25,28,15,15,51,54,57,15,89,93,28,51,51,89,57,132,135,93,140,93,149,132,149,54,54,]),'LISTA_COM':([7,11,12,33,],[13,30,31,63,]),'COMANDO':([7,11,12,33,35,81,134,160,164,166,],[14,14,14,14,68,68,68,68,68,68,]),'NOME':([7,11,12,17,19,33,34,35,41,46,47,50,60,69,76,77,78,79,81,103,134,144,160,164,166,],[16,16,16,42,42,16,42,16,42,42,84,42,42,42,42,42,42,42,16,42,16,42,16,16,16,]),'BLOCO':([7,11,12,33,35,81,134,160,164,166,],[18,18,18,18,67,110,145,167,167,170,]),'DEF_TIPOS':([8,],[23,]),'LISTA_CONST':([10,59,],[26,98,]),'CONSTANTE':([10,59,],[27,27,]),'EXP_LOGICA':([17,19,],[35,45,]),'EXP_REL':([17,19,],[36,36,]),'EXP_MAT':([17,19,34,41,46,50,60,69,76,77,103,144,],[37,37,65,80,82,86,101,104,105,106,131,131,]),'TERMO':([17,19,34,41,46,50,60,69,76,77,78,79,103,144,],[38,38,38,38,38,38,38,38,38,38,107,108,38,38,]),'FATOR':([17,19,34,41,46,50,60,69,76,77,78,79,103,144,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'PARAMETRO':([17,19,34,41,46,50,60,69,76,77,78,79,103,144,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'NOME_CONT':([22,66,85,],[48,48,114,]),'DEF_VAR':([23,160,164,],[52,166,166,]),'LISTA_TIPOS':([24,96,],[55,121,]),'TIPO':([24,96,],[56,56,]),'VALOR':([34,],[64,]),'OP_REL':([37,],[69,]),'LISTA_FUNC':([52,88,],[87,116,]),'FUNCAO':([52,88,],[88,88,]),'LISTA_VAR':([53,118,127,],[91,137,142,]),'VARIAVEL':([53,118,127,],[92,92,92,]),'LISTA_ID':([53,118,120,127,136,156,],[94,94,139,94,150,150,]),'CONST_VALOR':([60,],[99,]),'LISTA_ARG':([66,],[102,]),'TIPO_DADO':([97,119,155,157,159,163,],[123,138,160,162,164,168,]),'LISTA_EXP':([103,144,],[129,153,]),'ELSE_OPT':([110,],[133,]),'PARAM_FORM':([136,156,],[146,161,]),'PARAM':([136,156,],[148,148,]),'BLOCO_FUNCAO':([160,164,],[165,169,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM ID SEMICOLON CORPO','PROGRAMA',4,'p_programa','parser.py',7),
  ('CORPO -> DECLARACOES BEGIN LISTA_COM END','CORPO',4,'p_corpo','parser.py',11),
  ('CORPO -> BEGIN LISTA_COM END','CORPO',3,'p_corpo','parser.py',12),
  ('DECLARACOES -> DEF_CONST DEF_TIPOS DEF_VAR LISTA_FUNC','DECLARACOES',4,'p_declaracoes','parser.py',19),
  ('DECLARACOES -> empty','DECLARACOES',1,'p_declaracoes','parser.py',20),
  ('DEF_CONST -> CONST LISTA_CONST','DEF_CONST',2,'p_def_const','parser.py',27),
  ('DEF_CONST -> empty','DEF_CONST',1,'p_def_const','parser.py',28),
  ('LISTA_CONST -> CONSTANTE SEMICOLON LISTA_CONST','LISTA_CONST',3,'p_lista_const','parser.py',35),
  ('LISTA_CONST -> CONSTANTE SEMICOLON','LISTA_CONST',2,'p_lista_const','parser.py',36),
  ('LISTA_CONST -> empty','LISTA_CONST',1,'p_lista_const','parser.py',37),
  ('CONSTANTE -> ID ASSIGN CONST_VALOR SEMICOLON','CONSTANTE',4,'p_constante','parser.py',46),
  ('CONST_VALOR -> STRING','CONST_VALOR',1,'p_const_valor','parser.py',50),
  ('CONST_VALOR -> EXP_MAT','CONST_VALOR',1,'p_const_valor','parser.py',51),
  ('DEF_TIPOS -> TYPE LISTA_TIPOS','DEF_TIPOS',2,'p_def_tipos','parser.py',55),
  ('DEF_TIPOS -> empty','DEF_TIPOS',1,'p_def_tipos','parser.py',56),
  ('LISTA_TIPOS -> TIPO SEMICOLON LISTA_TIPOS','LISTA_TIPOS',3,'p_lista_tipos','parser.py',63),
  ('LISTA_TIPOS -> TIPO SEMICOLON','LISTA_TIPOS',2,'p_lista_tipos','parser.py',64),
  ('LISTA_TIPOS -> empty','LISTA_TIPOS',1,'p_lista_tipos','parser.py',65),
  ('TIPO -> ID ASSIGN TIPO_DADO','TIPO',3,'p_tipo','parser.py',74),
  ('TIPO_DADO -> INTEGER','TIPO_DADO',1,'p_tipo_dado','parser.py',78),
  ('TIPO_DADO -> REAL','TIPO_DADO',1,'p_tipo_dado','parser.py',79),
  ('TIPO_DADO -> ARRAY LBRACKET NUM_INT RBRACKET OF TIPO_DADO','TIPO_DADO',6,'p_tipo_dado','parser.py',80),
  ('TIPO_DADO -> RECORD LISTA_VAR END','TIPO_DADO',3,'p_tipo_dado','parser.py',81),
  ('TIPO_DADO -> ID','TIPO_DADO',1,'p_tipo_dado','parser.py',82),
  ('DEF_VAR -> VAR LISTA_VAR','DEF_VAR',2,'p_def_var','parser.py',93),
  ('DEF_VAR -> empty','DEF_VAR',1,'p_def_var','parser.py',94),
  ('LISTA_VAR -> VARIAVEL SEMICOLON LISTA_VAR','LISTA_VAR',3,'p_lista_var','parser.py',101),
  ('LISTA_VAR -> VARIAVEL SEMICOLON','LISTA_VAR',2,'p_lista_var','parser.py',102),
  ('LISTA_VAR -> empty','LISTA_VAR',1,'p_lista_var','parser.py',103),
  ('VARIAVEL -> LISTA_ID COLON TIPO_DADO','VARIAVEL',3,'p_variavel','parser.py',112),
  ('LISTA_ID -> ID COMMA LISTA_ID','LISTA_ID',3,'p_lista_id','parser.py',116),
  ('LISTA_ID -> ID','LISTA_ID',1,'p_lista_id','parser.py',117),
  ('LISTA_ID -> empty','LISTA_ID',1,'p_lista_id','parser.py',118),
  ('LISTA_FUNC -> FUNCAO LISTA_FUNC','LISTA_FUNC',2,'p_lista_func','parser.py',127),
  ('LISTA_FUNC -> empty','LISTA_FUNC',1,'p_lista_func','parser.py',128),
  ('FUNCAO -> FUNCTION ID LPAREN PARAM_FORM RPAREN COLON TIPO_DADO BLOCO_FUNCAO','FUNCAO',8,'p_funcao','parser.py',135),
  ('FUNCAO -> FUNCTION ID LPAREN RPAREN COLON TIPO_DADO BLOCO_FUNCAO','FUNCAO',7,'p_funcao','parser.py',136),
  ('PARAM_FORM -> PARAM COMMA PARAM_FORM','PARAM_FORM',3,'p_param_form','parser.py',143),
  ('PARAM_FORM -> PARAM','PARAM_FORM',1,'p_param_form','parser.py',144),
  ('PARAM_FORM -> empty','PARAM_FORM',1,'p_param_form','parser.py',145),
  ('PARAM -> LISTA_ID COLON TIPO_DADO','PARAM',3,'p_param','parser.py',154),
  ('BLOCO_FUNCAO -> DEF_VAR BLOCO','BLOCO_FUNCAO',2,'p_bloco_funcao','parser.py',158),
  ('BLOCO_FUNCAO -> BLOCO','BLOCO_FUNCAO',1,'p_bloco_funcao','parser.py',159),
  ('BLOCO -> BEGIN LISTA_COM END','BLOCO',3,'p_bloco','parser.py',166),
  ('BLOCO -> COMANDO','BLOCO',1,'p_bloco','parser.py',167),
  ('LISTA_COM -> COMANDO SEMICOLON LISTA_COM','LISTA_COM',3,'p_lista_com','parser.py',174),
  ('LISTA_COM -> COMANDO SEMICOLON','LISTA_COM',2,'p_lista_com','parser.py',175),
  ('LISTA_COM -> empty','LISTA_COM',1,'p_lista_com','parser.py',176),
  ('COMANDO -> NOME ASSIGN VALOR','COMANDO',3,'p_comando','parser.py',185),
  ('COMANDO -> WHILE EXP_LOGICA BLOCO','COMANDO',3,'p_comando','parser.py',186),
  ('COMANDO -> IF EXP_LOGICA THEN BLOCO ELSE_OPT','COMANDO',5,'p_comando','parser.py',187),
  ('COMANDO -> WRITE LPAREN EXP_MAT RPAREN','COMANDO',4,'p_comando','parser.py',188),
  ('COMANDO -> WRITE LPAREN STRING RPAREN','COMANDO',4,'p_comando','parser.py',189),
  ('COMANDO -> READ LPAREN NOME RPAREN','COMANDO',4,'p_comando','parser.py',190),
  ('COMANDO -> BLOCO','COMANDO',1,'p_comando','parser.py',191),
  ('ELSE_OPT -> ELSE BLOCO','ELSE_OPT',2,'p_else_opt','parser.py',206),
  ('ELSE_OPT -> empty','ELSE_OPT',1,'p_else_opt','parser.py',207),
  ('VALOR -> EXP_MAT','VALOR',1,'p_valor','parser.py',214),
  ('VALOR -> ID LISTA_ARG','VALOR',2,'p_valor','parser.py',215),
  ('LISTA_ARG -> LPAREN LISTA_EXP RPAREN','LISTA_ARG',3,'p_lista_arg','parser.py',222),
  ('LISTA_ARG -> LPAREN RPAREN','LISTA_ARG',2,'p_lista_arg','parser.py',223),
  ('LISTA_EXP -> EXP_MAT COMMA LISTA_EXP','LISTA_EXP',3,'p_lista_exp','parser.py',230),
  ('LISTA_EXP -> EXP_MAT','LISTA_EXP',1,'p_lista_exp','parser.py',231),
  ('LISTA_EXP -> empty','LISTA_EXP',1,'p_lista_exp','parser.py',232),
  ('EXP_LOGICA -> EXP_REL','EXP_LOGICA',1,'p_exp_logica','parser.py',241),
  ('EXP_REL -> EXP_MAT OP_REL EXP_MAT','EXP_REL',3,'p_exp_rel','parser.py',245),
  ('EXP_REL -> EXP_MAT','EXP_REL',1,'p_exp_rel','parser.py',246),
  ('OP_REL -> EQUALS','OP_REL',1,'p_op_rel','parser.py',253),
  ('OP_REL -> DIFF','OP_REL',1,'p_op_rel','parser.py',254),
  ('OP_REL -> LT','OP_REL',1,'p_op_rel','parser.py',255),
  ('OP_REL -> LE','OP_REL',1,'p_op_rel','parser.py',256),
  ('OP_REL -> GT','OP_REL',1,'p_op_rel','parser.py',257),
  ('OP_REL -> GE','OP_REL',1,'p_op_rel','parser.py',258),
  ('EXP_MAT -> TERMO PLUS EXP_MAT','EXP_MAT',3,'p_exp_mat','parser.py',262),
  ('EXP_MAT -> TERMO MINUS EXP_MAT','EXP_MAT',3,'p_exp_mat','parser.py',263),
  ('EXP_MAT -> TERMO','EXP_MAT',1,'p_exp_mat','parser.py',264),
  ('TERMO -> FATOR TIMES TERMO','TERMO',3,'p_termo','parser.py',272),
  ('TERMO -> FATOR DIVIDE TERMO','TERMO',3,'p_termo','parser.py',273),
  ('TERMO -> FATOR','TERMO',1,'p_termo','parser.py',274),
  ('FATOR -> PARAMETRO','FATOR',1,'p_fator','parser.py',281),
  ('FATOR -> LPAREN EXP_MAT RPAREN','FATOR',3,'p_fator','parser.py',282),
  ('PARAMETRO -> NOME','PARAMETRO',1,'p_parametro','parser.py',289),
  ('PARAMETRO -> NUM_INT','PARAMETRO',1,'p_parametro','parser.py',290),
  ('PARAMETRO -> NUM_REAL','PARAMETRO',1,'p_parametro','parser.py',291),
  ('NOME -> ID NOME_CONT','NOME',2,'p_nome','parser.py',295),
  ('NOME -> ID','NOME',1,'p_nome','parser.py',296),
  ('NOME_CONT -> DOT ID NOME_CONT','NOME_CONT',3,'p_nome_cont','parser.py',303),
  ('NOME_CONT -> LBRACKET EXP_MAT RBRACKET','NOME_CONT',3,'p_nome_cont','parser.py',304),
  ('NOME_CONT -> empty','NOME_CONT',1,'p_nome_cont','parser.py',305),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',314),
]
