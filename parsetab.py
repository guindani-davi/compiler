
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ASSIGN BEGIN COLON COMMA CONST DIFF DIVIDE DOT DOTDOT ELSE END EQUALS ERROR FUNCTION GE GT ID IF INTEGER LBRACKET LE LPAREN LT MINUS NUM_INT NUM_REAL OF PLUS PROGRAM RBRACKET READ REAL RECORD RPAREN SEMICOLON STRING THEN TIMES TYPE VAR WHILE WRITEPROGRAMA : PROGRAM ID SEMICOLON CORPOCORPO : DECLARACOES BEGIN LISTA_COM END\n    | BEGIN LISTA_COM ENDDECLARACOES : DEF_CONST DEF_TIPOS DEF_VAR LISTA_FUNC\n    | emptyDEF_CONST : CONST LISTA_CONST\n    | emptyLISTA_CONST : CONSTANTE LISTA_CONST\n    | CONSTANTECONSTANTE : ID ASSIGN CONST_VALOR SEMICOLONCONST_VALOR : STRING\n    | EXP_MATDEF_TIPOS : TYPE LISTA_TIPOS\n    | emptyLISTA_TIPOS : TIPO SEMICOLON LISTA_TIPOS\n    | TIPOTIPO : ID ASSIGN TIPO_DADOTIPO_DADO : INTEGER\n    | REAL\n    | ARRAY LBRACKET NUM_INT RBRACKET OF TIPO_DADO\n    | RECORD LISTA_VAR END\n    | IDDEF_VAR : VAR LISTA_VAR\n    | emptyLISTA_VAR : VARIAVEL SEMICOLON LISTA_VAR\n    | VARIAVELVARIAVEL : LISTA_ID COLON TIPO_DADOLISTA_ID : ID COMMA LISTA_ID\n    | IDLISTA_FUNC : FUNCAO LISTA_FUNC\n    | emptyFUNCAO : FUNCTION ID LPAREN PARAM_FORM RPAREN COLON TIPO_DADO BLOCO_FUNCAO\n    | FUNCTION ID LPAREN RPAREN COLON TIPO_DADO BLOCO_FUNCAOPARAM_FORM : PARAM COMMA PARAM_FORM\n    | PARAMPARAM : LISTA_ID COLON TIPO_DADOBLOCO_FUNCAO : DEF_VAR BLOCO\n    | BLOCOBLOCO : BEGIN LISTA_COM END\n    | COMANDOLISTA_COM : COMANDO SEMICOLON LISTA_COM\n    | COMANDOCOMANDO : NOME ASSIGN VALOR\n    | WHILE EXP_LOGICA BLOCO\n    | IF EXP_LOGICA THEN BLOCO ELSE BLOCO\n    | IF EXP_LOGICA THEN BLOCO\n    | WRITE LPAREN EXP_MAT RPAREN\n    | WRITE LPAREN STRING RPAREN\n    | READ LPAREN NOME RPAREN\n    | BEGIN LISTA_COM ENDVALOR : EXP_MAT\n    | ID LISTA_ARGLISTA_ARG : LPAREN LISTA_EXP RPAREN\n    | LPAREN RPAREN\n    | emptyLISTA_EXP : EXP_MAT COMMA LISTA_EXP\n    | EXP_MATEXP_LOGICA : EXP_RELEXP_REL : EXP_MAT OP_REL EXP_MAT\n    | EXP_MATOP_REL : EQUALS\n    | DIFF\n    | LT\n    | LE\n    | GT\n    | GEEXP_MAT : TERMO PLUS EXP_MAT\n    | TERMO MINUS EXP_MAT\n    | TERMO\n    TERMO : FATOR TIMES TERMO\n    | FATOR DIVIDE TERMO\n    | FATORFATOR : PARAMETRO\n    | LPAREN EXP_MAT RPARENPARAMETRO : NOME\n    | NUM_INT\n    | NUM_REALNOME : ID NOME_CONT\n    | IDNOME_CONT : DOT ID NOME_CONT\n    | LBRACKET EXP_MAT RBRACKET NOME_CONT\n    | emptyempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,29,57,],[0,-1,-3,-2,]),'ID':([2,7,10,11,12,16,17,20,22,25,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,50,51,56,64,66,67,68,69,70,71,72,73,74,75,76,78,82,87,88,89,92,93,98,101,102,103,104,105,106,111,112,115,116,117,119,121,122,124,125,130,131,132,133,134,139,146,149,150,151,153,154,157,158,160,162,],[3,20,26,20,20,20,20,-79,54,26,20,62,20,-58,-60,-69,-72,-73,20,-75,-76,-77,20,20,-78,82,20,-82,91,-24,20,20,20,-61,-62,-63,-64,-65,-66,20,20,20,20,20,-83,114,-23,-26,54,119,20,-59,-67,-68,-70,-71,-74,-80,-83,91,119,91,-22,-18,-19,91,-10,20,-81,91,-25,-27,20,-21,119,91,119,119,20,119,20,20,-20,]),'SEMICOLON':([3,14,20,35,36,37,39,40,41,45,48,53,58,60,61,62,63,65,82,89,94,95,96,97,99,102,103,104,105,106,107,108,109,110,111,112,119,120,121,122,127,129,131,134,138,140,146,162,],[4,30,-79,-69,-72,-73,-75,-76,-77,-78,-82,92,-50,-43,-51,-79,-44,-40,-83,115,125,-11,-12,-52,-55,-67,-68,-70,-71,-74,-46,-47,-48,-49,-80,-83,-22,-17,-18,-19,-54,-39,-81,-27,-53,-45,-21,-20,]),'BEGIN':([4,6,7,8,9,11,12,20,21,23,24,25,30,32,33,34,35,36,37,39,40,41,45,48,49,51,52,53,55,60,61,62,63,64,65,78,82,84,85,86,88,89,97,99,101,102,103,104,105,106,107,108,109,110,111,112,113,118,119,120,121,122,125,127,129,130,131,133,134,138,140,146,154,158,159,160,161,162,163,164,],[7,11,12,-83,-5,12,12,-79,-83,-14,-6,-9,12,64,-58,-60,-69,-72,-73,-75,-76,-77,-78,-82,-83,-24,-13,-16,-8,-43,-51,-79,-44,12,-40,64,-83,-4,-83,-31,-23,-26,-52,-55,-59,-67,-68,-70,-71,-74,-46,-47,-48,-49,-80,-83,-30,-15,-22,-17,-18,-19,-10,-54,-39,64,-81,-25,-27,-53,-45,-21,64,64,-33,64,-38,-20,-32,-37,]),'CONST':([4,],[10,]),'TYPE':([4,8,9,24,25,55,125,],[-83,22,-7,-6,-9,-8,-10,]),'VAR':([4,8,9,21,23,24,25,52,53,55,118,119,120,121,122,125,146,154,158,162,],[-83,-83,-7,50,-14,-6,-9,-13,-16,-8,-15,-22,-17,-18,-19,-10,-21,50,50,-20,]),'FUNCTION':([4,8,9,20,21,23,24,25,35,36,37,39,40,41,45,48,49,51,52,53,55,60,61,62,63,65,82,85,88,89,97,99,102,103,104,105,106,107,108,109,110,111,112,118,119,120,121,122,125,127,129,131,133,134,138,140,146,159,161,162,163,164,],[-83,-83,-7,-79,-83,-14,-6,-9,-69,-72,-73,-75,-76,-77,-78,-82,87,-24,-13,-16,-8,-43,-51,-79,-44,-40,-83,87,-23,-26,-52,-55,-67,-68,-70,-71,-74,-46,-47,-48,-49,-80,-83,-15,-22,-17,-18,-19,-10,-54,-39,-81,-25,-27,-53,-45,-21,-33,-38,-20,-32,-37,]),'WHILE':([7,11,12,20,30,32,33,34,35,36,37,39,40,41,45,48,51,64,78,82,88,89,101,102,103,104,105,106,111,112,119,121,122,130,131,133,134,146,154,158,160,162,],[16,16,16,-79,16,16,-58,-60,-69,-72,-73,-75,-76,-77,-78,-82,-24,16,16,-83,-23,-26,-59,-67,-68,-70,-71,-74,-80,-83,-22,-18,-19,16,-81,-25,-27,-21,16,16,16,-20,]),'IF':([7,11,12,20,30,32,33,34,35,36,37,39,40,41,45,48,51,64,78,82,88,89,101,102,103,104,105,106,111,112,119,121,122,130,131,133,134,146,154,158,160,162,],[17,17,17,-79,17,17,-58,-60,-69,-72,-73,-75,-76,-77,-78,-82,-24,17,17,-83,-23,-26,-59,-67,-68,-70,-71,-74,-80,-83,-22,-18,-19,17,-81,-25,-27,-21,17,17,17,-20,]),'WRITE':([7,11,12,20,30,32,33,34,35,36,37,39,40,41,45,48,51,64,78,82,88,89,101,102,103,104,105,106,111,112,119,121,122,130,131,133,134,146,154,158,160,162,],[18,18,18,-79,18,18,-58,-60,-69,-72,-73,-75,-76,-77,-78,-82,-24,18,18,-83,-23,-26,-59,-67,-68,-70,-71,-74,-80,-83,-22,-18,-19,18,-81,-25,-27,-21,18,18,18,-20,]),'READ':([7,11,12,20,30,32,33,34,35,36,37,39,40,41,45,48,51,64,78,82,88,89,101,102,103,104,105,106,111,112,119,121,122,130,131,133,134,146,154,158,160,162,],[19,19,19,-79,19,19,-58,-60,-69,-72,-73,-75,-76,-77,-78,-82,-24,19,19,-83,-23,-26,-59,-67,-68,-70,-71,-74,-80,-83,-22,-18,-19,19,-81,-25,-27,-21,19,19,19,-20,]),'END':([13,14,20,27,28,35,36,37,39,40,41,45,48,58,59,60,61,62,63,65,82,89,97,99,100,102,103,104,105,106,107,108,109,110,111,112,119,121,122,127,129,131,133,134,137,138,140,146,162,],[29,-42,-79,57,58,-69,-72,-73,-75,-76,-77,-78,-82,-50,-41,-43,-51,-79,-44,-40,-83,-26,-52,-55,129,-67,-68,-70,-71,-74,-46,-47,-48,-49,-80,-83,-22,-18,-19,-54,-39,-81,-25,-27,146,-53,-45,-21,-20,]),'ASSIGN':([15,20,26,45,48,54,82,111,112,131,],[31,-79,56,-78,-82,93,-83,-80,-83,-81,]),'LPAREN':([16,17,18,19,31,38,43,47,56,62,66,67,68,69,70,71,72,73,74,75,76,98,114,139,],[38,38,43,44,38,38,38,38,38,98,38,-61,-62,-63,-64,-65,-66,38,38,38,38,38,132,38,]),'NUM_INT':([16,17,31,38,43,47,56,66,67,68,69,70,71,72,73,74,75,76,98,136,139,],[40,40,40,40,40,40,40,40,-61,-62,-63,-64,-65,-66,40,40,40,40,40,145,40,]),'NUM_REAL':([16,17,31,38,43,47,56,66,67,68,69,70,71,72,73,74,75,76,98,139,],[41,41,41,41,41,41,41,41,-61,-62,-63,-64,-65,-66,41,41,41,41,41,41,]),'TIMES':([20,36,37,39,40,41,45,48,62,82,99,106,111,112,131,],[-79,75,-73,-75,-76,-77,-78,-82,-79,-83,-82,-74,-80,-83,-81,]),'DIVIDE':([20,36,37,39,40,41,45,48,62,82,99,106,111,112,131,],[-79,76,-73,-75,-76,-77,-78,-82,-79,-83,-82,-74,-80,-83,-81,]),'PLUS':([20,35,36,37,39,40,41,45,48,62,82,99,104,105,106,111,112,131,],[-79,73,-72,-73,-75,-76,-77,-78,-82,-79,-83,-82,-70,-71,-74,-80,-83,-81,]),'MINUS':([20,35,36,37,39,40,41,45,48,62,82,99,104,105,106,111,112,131,],[-79,74,-72,-73,-75,-76,-77,-78,-82,-79,-83,-82,-70,-71,-74,-80,-83,-81,]),'EQUALS':([20,34,35,36,37,39,40,41,45,48,82,102,103,104,105,106,111,112,131,],[-79,67,-69,-72,-73,-75,-76,-77,-78,-82,-83,-67,-68,-70,-71,-74,-80,-83,-81,]),'DIFF':([20,34,35,36,37,39,40,41,45,48,82,102,103,104,105,106,111,112,131,],[-79,68,-69,-72,-73,-75,-76,-77,-78,-82,-83,-67,-68,-70,-71,-74,-80,-83,-81,]),'LT':([20,34,35,36,37,39,40,41,45,48,82,102,103,104,105,106,111,112,131,],[-79,69,-69,-72,-73,-75,-76,-77,-78,-82,-83,-67,-68,-70,-71,-74,-80,-83,-81,]),'LE':([20,34,35,36,37,39,40,41,45,48,82,102,103,104,105,106,111,112,131,],[-79,70,-69,-72,-73,-75,-76,-77,-78,-82,-83,-67,-68,-70,-71,-74,-80,-83,-81,]),'GT':([20,34,35,36,37,39,40,41,45,48,82,102,103,104,105,106,111,112,131,],[-79,71,-69,-72,-73,-75,-76,-77,-78,-82,-83,-67,-68,-70,-71,-74,-80,-83,-81,]),'GE':([20,34,35,36,37,39,40,41,45,48,82,102,103,104,105,106,111,112,131,],[-79,72,-69,-72,-73,-75,-76,-77,-78,-82,-83,-67,-68,-70,-71,-74,-80,-83,-81,]),'THEN':([20,33,34,35,36,37,39,40,41,42,45,48,82,101,102,103,104,105,106,111,112,131,],[-79,-58,-60,-69,-72,-73,-75,-76,-77,78,-78,-82,-83,-59,-67,-68,-70,-71,-74,-80,-83,-81,]),'RPAREN':([20,35,36,37,39,40,41,45,48,77,79,80,81,82,98,102,103,104,105,106,111,112,119,121,122,126,128,131,132,141,143,146,147,155,156,162,],[-79,-69,-72,-73,-75,-76,-77,-78,-82,106,108,109,110,-83,127,-67,-68,-70,-71,-74,-80,-83,-22,-18,-19,138,-57,-81,142,148,-35,-21,-56,-34,-36,-20,]),'RBRACKET':([20,35,36,37,39,40,41,45,48,82,83,102,103,104,105,106,111,112,131,145,],[-79,-69,-72,-73,-75,-76,-77,-78,-82,-83,112,-67,-68,-70,-71,-74,-80,-83,-81,152,]),'ELSE':([20,35,36,37,39,40,41,45,48,60,61,62,63,65,82,97,99,102,103,104,105,106,107,108,109,110,111,112,127,129,131,138,140,],[-79,-69,-72,-73,-75,-76,-77,-78,-82,-43,-51,-79,-44,-40,-83,-52,-55,-67,-68,-70,-71,-74,130,-47,-48,-49,-80,-83,-54,-39,-81,-53,-45,]),'COMMA':([20,35,36,37,39,40,41,45,48,82,91,102,103,104,105,106,111,112,119,121,122,128,131,143,146,156,162,],[-79,-69,-72,-73,-75,-76,-77,-78,-82,-83,117,-67,-68,-70,-71,-74,-80,-83,-22,-18,-19,139,-81,150,-21,-36,-20,]),'DOT':([20,62,82,112,],[46,46,46,46,]),'LBRACKET':([20,62,82,112,123,],[47,47,47,47,136,]),'STRING':([43,56,],[80,95,]),'COLON':([90,91,135,142,144,148,],[116,-29,-28,149,151,153,]),'INTEGER':([93,116,149,151,153,157,],[121,121,121,121,121,121,]),'REAL':([93,116,149,151,153,157,],[122,122,122,122,122,122,]),'ARRAY':([93,116,149,151,153,157,],[123,123,123,123,123,123,]),'RECORD':([93,116,149,151,153,157,],[124,124,124,124,124,124,]),'OF':([152,],[157,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'CORPO':([4,],[5,]),'DECLARACOES':([4,],[6,]),'DEF_CONST':([4,],[8,]),'empty':([4,8,20,21,49,62,82,85,112,154,158,],[9,23,48,51,86,99,48,86,48,51,51,]),'LISTA_COM':([7,11,12,30,64,],[13,27,28,59,100,]),'COMANDO':([7,11,12,30,32,64,78,130,154,158,160,],[14,14,14,14,65,14,65,65,65,65,65,]),'NOME':([7,11,12,16,17,30,31,32,38,43,44,47,56,64,66,73,74,75,76,78,98,130,139,154,158,160,],[15,15,15,39,39,15,39,15,39,39,81,39,39,15,39,39,39,39,39,15,39,15,39,15,15,15,]),'DEF_TIPOS':([8,],[21,]),'LISTA_CONST':([10,25,],[24,55,]),'CONSTANTE':([10,25,],[25,25,]),'EXP_LOGICA':([16,17,],[32,42,]),'EXP_REL':([16,17,],[33,33,]),'EXP_MAT':([16,17,31,38,43,47,56,66,73,74,98,139,],[34,34,61,77,79,83,96,101,102,103,128,128,]),'TERMO':([16,17,31,38,43,47,56,66,73,74,75,76,98,139,],[35,35,35,35,35,35,35,35,35,35,104,105,35,35,]),'FATOR':([16,17,31,38,43,47,56,66,73,74,75,76,98,139,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'PARAMETRO':([16,17,31,38,43,47,56,66,73,74,75,76,98,139,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'NOME_CONT':([20,62,82,112,],[45,45,111,131,]),'DEF_VAR':([21,154,158,],[49,160,160,]),'LISTA_TIPOS':([22,92,],[52,118,]),'TIPO':([22,92,],[53,53,]),'VALOR':([31,],[60,]),'BLOCO':([32,78,130,154,158,160,],[63,107,140,161,161,164,]),'OP_REL':([34,],[66,]),'LISTA_FUNC':([49,85,],[84,113,]),'FUNCAO':([49,85,],[85,85,]),'LISTA_VAR':([50,115,124,],[88,133,137,]),'VARIAVEL':([50,115,124,],[89,89,89,]),'LISTA_ID':([50,115,117,124,132,150,],[90,90,135,90,144,144,]),'CONST_VALOR':([56,],[94,]),'LISTA_ARG':([62,],[97,]),'TIPO_DADO':([93,116,149,151,153,157,],[120,134,154,156,158,162,]),'LISTA_EXP':([98,139,],[126,147,]),'PARAM_FORM':([132,150,],[141,155,]),'PARAM':([132,150,],[143,143,]),'BLOCO_FUNCAO':([154,158,],[159,163,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM ID SEMICOLON CORPO','PROGRAMA',4,'p_programa','parser.py',13),
  ('CORPO -> DECLARACOES BEGIN LISTA_COM END','CORPO',4,'p_corpo','parser.py',18),
  ('CORPO -> BEGIN LISTA_COM END','CORPO',3,'p_corpo','parser.py',19),
  ('DECLARACOES -> DEF_CONST DEF_TIPOS DEF_VAR LISTA_FUNC','DECLARACOES',4,'p_declaracoes','parser.py',27),
  ('DECLARACOES -> empty','DECLARACOES',1,'p_declaracoes','parser.py',28),
  ('DEF_CONST -> CONST LISTA_CONST','DEF_CONST',2,'p_def_const','parser.py',36),
  ('DEF_CONST -> empty','DEF_CONST',1,'p_def_const','parser.py',37),
  ('LISTA_CONST -> CONSTANTE LISTA_CONST','LISTA_CONST',2,'p_lista_const','parser.py',45),
  ('LISTA_CONST -> CONSTANTE','LISTA_CONST',1,'p_lista_const','parser.py',46),
  ('CONSTANTE -> ID ASSIGN CONST_VALOR SEMICOLON','CONSTANTE',4,'p_constante','parser.py',54),
  ('CONST_VALOR -> STRING','CONST_VALOR',1,'p_const_valor','parser.py',59),
  ('CONST_VALOR -> EXP_MAT','CONST_VALOR',1,'p_const_valor','parser.py',60),
  ('DEF_TIPOS -> TYPE LISTA_TIPOS','DEF_TIPOS',2,'p_def_tipos','parser.py',65),
  ('DEF_TIPOS -> empty','DEF_TIPOS',1,'p_def_tipos','parser.py',66),
  ('LISTA_TIPOS -> TIPO SEMICOLON LISTA_TIPOS','LISTA_TIPOS',3,'p_lista_tipos','parser.py',74),
  ('LISTA_TIPOS -> TIPO','LISTA_TIPOS',1,'p_lista_tipos','parser.py',75),
  ('TIPO -> ID ASSIGN TIPO_DADO','TIPO',3,'p_tipo','parser.py',83),
  ('TIPO_DADO -> INTEGER','TIPO_DADO',1,'p_tipo_dado','parser.py',88),
  ('TIPO_DADO -> REAL','TIPO_DADO',1,'p_tipo_dado','parser.py',89),
  ('TIPO_DADO -> ARRAY LBRACKET NUM_INT RBRACKET OF TIPO_DADO','TIPO_DADO',6,'p_tipo_dado','parser.py',90),
  ('TIPO_DADO -> RECORD LISTA_VAR END','TIPO_DADO',3,'p_tipo_dado','parser.py',91),
  ('TIPO_DADO -> ID','TIPO_DADO',1,'p_tipo_dado','parser.py',92),
  ('DEF_VAR -> VAR LISTA_VAR','DEF_VAR',2,'p_def_var','parser.py',104),
  ('DEF_VAR -> empty','DEF_VAR',1,'p_def_var','parser.py',105),
  ('LISTA_VAR -> VARIAVEL SEMICOLON LISTA_VAR','LISTA_VAR',3,'p_lista_var','parser.py',113),
  ('LISTA_VAR -> VARIAVEL','LISTA_VAR',1,'p_lista_var','parser.py',114),
  ('VARIAVEL -> LISTA_ID COLON TIPO_DADO','VARIAVEL',3,'p_variavel','parser.py',122),
  ('LISTA_ID -> ID COMMA LISTA_ID','LISTA_ID',3,'p_lista_id','parser.py',127),
  ('LISTA_ID -> ID','LISTA_ID',1,'p_lista_id','parser.py',128),
  ('LISTA_FUNC -> FUNCAO LISTA_FUNC','LISTA_FUNC',2,'p_lista_func','parser.py',136),
  ('LISTA_FUNC -> empty','LISTA_FUNC',1,'p_lista_func','parser.py',137),
  ('FUNCAO -> FUNCTION ID LPAREN PARAM_FORM RPAREN COLON TIPO_DADO BLOCO_FUNCAO','FUNCAO',8,'p_funcao','parser.py',145),
  ('FUNCAO -> FUNCTION ID LPAREN RPAREN COLON TIPO_DADO BLOCO_FUNCAO','FUNCAO',7,'p_funcao','parser.py',146),
  ('PARAM_FORM -> PARAM COMMA PARAM_FORM','PARAM_FORM',3,'p_param_form','parser.py',154),
  ('PARAM_FORM -> PARAM','PARAM_FORM',1,'p_param_form','parser.py',155),
  ('PARAM -> LISTA_ID COLON TIPO_DADO','PARAM',3,'p_param','parser.py',163),
  ('BLOCO_FUNCAO -> DEF_VAR BLOCO','BLOCO_FUNCAO',2,'p_bloco_funcao','parser.py',168),
  ('BLOCO_FUNCAO -> BLOCO','BLOCO_FUNCAO',1,'p_bloco_funcao','parser.py',169),
  ('BLOCO -> BEGIN LISTA_COM END','BLOCO',3,'p_bloco','parser.py',177),
  ('BLOCO -> COMANDO','BLOCO',1,'p_bloco','parser.py',178),
  ('LISTA_COM -> COMANDO SEMICOLON LISTA_COM','LISTA_COM',3,'p_lista_com','parser.py',186),
  ('LISTA_COM -> COMANDO','LISTA_COM',1,'p_lista_com','parser.py',187),
  ('COMANDO -> NOME ASSIGN VALOR','COMANDO',3,'p_comando','parser.py',195),
  ('COMANDO -> WHILE EXP_LOGICA BLOCO','COMANDO',3,'p_comando','parser.py',196),
  ('COMANDO -> IF EXP_LOGICA THEN BLOCO ELSE BLOCO','COMANDO',6,'p_comando','parser.py',197),
  ('COMANDO -> IF EXP_LOGICA THEN BLOCO','COMANDO',4,'p_comando','parser.py',198),
  ('COMANDO -> WRITE LPAREN EXP_MAT RPAREN','COMANDO',4,'p_comando','parser.py',199),
  ('COMANDO -> WRITE LPAREN STRING RPAREN','COMANDO',4,'p_comando','parser.py',200),
  ('COMANDO -> READ LPAREN NOME RPAREN','COMANDO',4,'p_comando','parser.py',201),
  ('COMANDO -> BEGIN LISTA_COM END','COMANDO',3,'p_comando','parser.py',202),
  ('VALOR -> EXP_MAT','VALOR',1,'p_valor','parser.py',220),
  ('VALOR -> ID LISTA_ARG','VALOR',2,'p_valor','parser.py',221),
  ('LISTA_ARG -> LPAREN LISTA_EXP RPAREN','LISTA_ARG',3,'p_lista_arg','parser.py',229),
  ('LISTA_ARG -> LPAREN RPAREN','LISTA_ARG',2,'p_lista_arg','parser.py',230),
  ('LISTA_ARG -> empty','LISTA_ARG',1,'p_lista_arg','parser.py',231),
  ('LISTA_EXP -> EXP_MAT COMMA LISTA_EXP','LISTA_EXP',3,'p_lista_exp','parser.py',241),
  ('LISTA_EXP -> EXP_MAT','LISTA_EXP',1,'p_lista_exp','parser.py',242),
  ('EXP_LOGICA -> EXP_REL','EXP_LOGICA',1,'p_exp_logica','parser.py',250),
  ('EXP_REL -> EXP_MAT OP_REL EXP_MAT','EXP_REL',3,'p_exp_rel','parser.py',255),
  ('EXP_REL -> EXP_MAT','EXP_REL',1,'p_exp_rel','parser.py',256),
  ('OP_REL -> EQUALS','OP_REL',1,'p_op_rel','parser.py',264),
  ('OP_REL -> DIFF','OP_REL',1,'p_op_rel','parser.py',265),
  ('OP_REL -> LT','OP_REL',1,'p_op_rel','parser.py',266),
  ('OP_REL -> LE','OP_REL',1,'p_op_rel','parser.py',267),
  ('OP_REL -> GT','OP_REL',1,'p_op_rel','parser.py',268),
  ('OP_REL -> GE','OP_REL',1,'p_op_rel','parser.py',269),
  ('EXP_MAT -> TERMO PLUS EXP_MAT','EXP_MAT',3,'p_exp_mat','parser.py',274),
  ('EXP_MAT -> TERMO MINUS EXP_MAT','EXP_MAT',3,'p_exp_mat','parser.py',275),
  ('EXP_MAT -> TERMO','EXP_MAT',1,'p_exp_mat','parser.py',276),
  ('TERMO -> FATOR TIMES TERMO','TERMO',3,'p_termo','parser.py',285),
  ('TERMO -> FATOR DIVIDE TERMO','TERMO',3,'p_termo','parser.py',286),
  ('TERMO -> FATOR','TERMO',1,'p_termo','parser.py',287),
  ('FATOR -> PARAMETRO','FATOR',1,'p_fator','parser.py',295),
  ('FATOR -> LPAREN EXP_MAT RPAREN','FATOR',3,'p_fator','parser.py',296),
  ('PARAMETRO -> NOME','PARAMETRO',1,'p_parametro','parser.py',304),
  ('PARAMETRO -> NUM_INT','PARAMETRO',1,'p_parametro','parser.py',305),
  ('PARAMETRO -> NUM_REAL','PARAMETRO',1,'p_parametro','parser.py',306),
  ('NOME -> ID NOME_CONT','NOME',2,'p_nome','parser.py',311),
  ('NOME -> ID','NOME',1,'p_nome','parser.py',312),
  ('NOME_CONT -> DOT ID NOME_CONT','NOME_CONT',3,'p_nome_cont','parser.py',320),
  ('NOME_CONT -> LBRACKET EXP_MAT RBRACKET NOME_CONT','NOME_CONT',4,'p_nome_cont','parser.py',321),
  ('NOME_CONT -> empty','NOME_CONT',1,'p_nome_cont','parser.py',322),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',332),
]
